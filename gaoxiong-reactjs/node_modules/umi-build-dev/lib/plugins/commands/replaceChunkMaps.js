"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.getContent = void 0;

var _path = require("path");

var _fs = require("fs");

var _getChunkMap = require("../../utils/getChunkMap");

const getContent = path => {
  if ((0, _fs.existsSync)(path)) {
    const content = (0, _fs.readFileSync)(path, 'utf-8');
    return content;
  }

  return '';
};

exports.getContent = getContent;

var _default = (service, clientStat) => {
  const paths = service.paths;
  const absOutputPath = paths.absOutputPath;
  const chunkGroups = clientStat.compilation.chunkGroups;
  const chunkGroupData = (0, _getChunkMap.getChunkGroupData)(chunkGroups); // get umi.js / umi.css

  const _ref = chunkGroupData.find(chunk => chunk.name === 'umi') || {},
        _ref$chunks = _ref.chunks,
        umiChunk = _ref$chunks === void 0 ? [] : _ref$chunks;

  const umiServerPath = (0, _path.join)(absOutputPath, 'umi.server.js');
  const umiServer = getContent(umiServerPath);
  const result = umiServer.replace(/__UMI_SERVER__\.js/g, umiChunk.find(chunk => (0, _getChunkMap.isAssetsType)('js', chunk)) || '').replace(/__UMI_SERVER__\.css/g, // umi.css may not exist when using dynamic Routing
  umiChunk.find(chunk => (0, _getChunkMap.isAssetsType)('css', chunk)) || '');
  (0, _fs.writeFileSync)(umiServerPath, result, 'utf-8');
};

exports.default = _default;